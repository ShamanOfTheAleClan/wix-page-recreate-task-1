{"version":3,"sources":["custom.js"],"names":[],"mappingsfile":"prod.js","sourcesContent":["\r\n\r\nfunction unhide(e) {\r\n    e.classList.remove('hidden');\r\n}\r\nfunction opaque(e){\r\n    e.classList.remove('transparent');\r\n}\r\nfunction opaqueNot(e) {\r\n    e.classList.add('transparent');\r\n}\r\n\r\nlet doc = {\r\n    get: function(e){\r\n      return document.querySelector(e);\r\n    },\r\n    getAll: function(e){\r\n      return document.querySelectorAll(e);\r\n    },\r\n    id: function(e){\r\n      return document.getElementById(e);\r\n    },\r\n    create: function(e){\r\n        return document.createElement(e);\r\n    }\r\n};\r\n\r\n\r\nlet burger = doc.get('.burger');\r\nlet menu = doc.get('nav').querySelector('.wrapper');\r\n\r\nburger.addEventListener('click', function(e) {\r\n    if (burger.classList.contains('burger-active')){\r\n        burger.classList.remove('burger-active');\r\n        menu.classList.add('menu-hidden');\r\n    }\r\n    else {\r\n        burger.classList.add('burger-active');\r\n        menu.classList.remove('menu-hidden');\r\n    }\r\n});\r\nwindow.addEventListener('scroll', function(){\r\n    if (pageYOffset > 600) {\r\n        doc.get('video').style.display=\"none\";\r\n    }\r\n    else {\r\n        doc.get('video').style.display=\"block\";\r\n    }\r\n})\r\n\r\n// lazy-load\r\nlet sections = doc.getAll('section');\r\nfunction showSection(){\r\n    for(i=0;i<sections.length;i++) {\r\n        sections[i]\r\n        let dist = sections[i].offsetTop - window.innerHeight;\r\n        let view = pageYOffset;\r\n        if (view >= dist+50) {\r\n            unhide(sections[i]);\r\n        }\r\n    }\r\n}\r\nwindow.addEventListener('scroll', showSection);\r\nwindow.addEventListener('load', showSection);\r\n\r\n\r\n\r\nlet hearts = doc.getAll('.heart');\r\n\r\n\r\nfor(i=0; i<hearts.length;i++) {\r\n\r\n    \r\n    hearts[i].addEventListener('click', function(f){\r\n        hearts[i].querySelector('.count');\r\n        hearts[i].querySelector('.count').dataset.count;\r\n        hearts[i].querySelector('.count').dataset.count++;\r\n        hearts[i].querySelector('.count').innerHTML = hearts[i].querySelector('.count').dataset.count;\r\n        if (hearts[i].querySelector('.count').dataset.count == 20) {\r\n            alert('Please stop');\r\n        }\r\n        if (hearts[i].querySelector('.count').dataset.count == 40) {\r\n            alert('No, really, stop');\r\n        }\r\n        if (hearts[i].querySelector('.count').dataset.count == 100) {\r\n            alert('You REALLY don\\'t have anything better to do??');\r\n        }\r\n    })\r\n};\r\n\r\ndoc.get('.back-to-top').addEventListener('click', function(e){\r\n    window.scrollTo(0,0);\r\n});\r\n\r\n\r\nfunction showButtonToTop(){\r\n    let button = doc.get('.back-to-top');\r\n    if (doc.get('.mobile').classList.contains('selected-display-type') && pageYOffset >= 200) {\r\n        opaque(button);\r\n        console.log('opaque');\r\n    }\r\n    else {\r\n        opaqueNot(button);\r\n        console.log('transparent');\r\n    }\r\n}\r\n\r\nwindow.addEventListener('load', showButtonToTop);\r\nwindow.addEventListener('scroll', showButtonToTop);\r\n\r\n\r\nlet pc = doc.get('.pc');\r\nlet mobile = doc.get('.mobile');\r\nlet body = doc.get('body');\r\ndoc.get('.display-switch.mobile').addEventListener('click', function(){        \r\n    \r\n    if (pc.classList.contains('selected-display-type')) {\r\n        pc.classList.remove('selected-display-type');\r\n        body.classList.remove('pc-mode');\r\n        mobile.classList.add('selected-display-type');\r\n        body.classList.add('mobile-mode');\r\n        showButtonToTop();\r\n        // enter mobile mode\r\n    }\r\n});\r\n    doc.get('.display-switch.pc').addEventListener('click', function(){\r\n    if (mobile.classList.contains('selected-display-type')) {\r\n        mobile.classList.remove('selected-display-type');\r\n        body.classList.remove('mobile-mode');\r\n        pc.classList.add('selected-display-type');\r\n        body.classList.add('pc-mode');\r\n        showButtonToTop();\r\n        // enter pc mode\r\n    }\r\n    })\r\n\r\n\r\n\r\n// CHAT functionality\r\n// chat open\r\nlet chatCloseButton = doc.get('.chat-close');\r\nchatCloseButton.addEventListener('click', function(e){\r\n    doc.get('body').classList.remove('chat-open');\r\n})\r\ndoc.get('.chat-icon').addEventListener('click', function(e){\r\n    doc.get('body').classList.add('chat-open');\r\n})\r\n\r\n// chat activate on chat input focus\r\ndoc.get('.chat-input').addEventListener('click', function(e) {\r\n    if (doc.get('.chat-wrap').classList.contains('chat-active')) {}\r\n    else {\r\n        let h3 = doc.get('.chat-hero').querySelector('h3');\r\n        h3.style.opacity=\"0\";\r\n        h3.style.display='none';\r\n        doc.get('.chat-hero').querySelector('p').style.opacity=\"0\";\r\n        doc.get('.chat-wrap').classList.add('chat-active');\r\n        setTimeout(function(){\r\n            h3.style.opacity='1';\r\n            h3.style.display='block';\r\n            h3.style.fontSize ='18px';\r\n            h3.style.marginBottom='0px';\r\n        },200);\r\n    }\r\n});\r\n\r\n// chat deactivate on chat hero image click\r\ndoc.get('.chat-hero').addEventListener('click', function(e){\r\n    if (e.target != document.activeElement) {\r\n        let h3 = doc.get('.chat-hero').querySelector('h3');\r\n        h3.style.opacity='0';\r\n        h3.style.display='none';\r\n        doc.get('.chat-wrap').classList.remove('chat-active');\r\n        setTimeout(function(){\r\n            h3.style.opacity='1';\r\n            h3.style.display=\"block\";\r\n            h3.style.marginBottom=\"15px\";\r\n            h3.style.fontSize=\"23px\";\r\n            doc.get('.chat-hero').querySelector('p').style.opacity=\"1\";\r\n        },200);\r\n    }\r\n})\r\n\r\nlet firstResponse = doc.create('div');\r\n// create that form from first bot response.\r\nlet fieldset = doc.create('fieldset');\r\nlet input1 = doc.create('input');\r\nlet input2 = doc.create('input');\r\nlet submit = doc.create('input');\r\nlet placeholder1 = doc.create('div');\r\nlet placeholder2 = doc.create('div');\r\n\r\nplaceholder1.classList.add('label');\r\nplaceholder2.classList.add('label');\r\n\r\nfirstResponse.appendChild(fieldset);\r\nfieldset.appendChild(input1);\r\nfieldset.appendChild(placeholder1);\r\nfieldset.appendChild(input2);\r\nfieldset.appendChild(placeholder2);\r\nfieldset.appendChild(submit);\r\n\r\nplaceholder1.innerText='Name';\r\nplaceholder2.innerText='Email';\r\n\r\n\r\ninput1.setAttribute('type','text');\r\ninput1.setAttribute('required','true')\r\ninput2.setAttribute('type','email');\r\ninput2.setAttribute('required','true');\r\nsubmit.setAttribute('type','submit');\r\n\r\n\r\n// send typed text as message\r\nfunction sendMessage(){\r\n    let message = doc.get('.chat-input');\r\n    let chat = doc.get('.chat-field');\r\n    \r\n    // send message\r\n    if (message.value != '') {\r\n        let chatBubble = doc.create('div');\r\n        chatBubble.innerText = message.value;\r\n        message.value= '';\r\n        chatBubble.classList.add('chat-me');\r\n        chat.appendChild(chatBubble);\r\n    }\r\n    // if first message - show time\r\n    if ((chat.querySelector('.chat-me')!=null) &&(doc.get('.chat-date') == null)) {\r\n        let date = doc.create('div');\r\n        let options = { hour: 'numeric', minute: 'numeric'  };\r\n        let today  = new Date();\r\n        date.innerText = today.toLocaleTimeString(\"en-US\", options).toUpperCase();\r\n        date.classList.add('chat-date');\r\n        chat.insertBefore(date, chat.firstChild);\r\n    }\r\n    // always show newest message\r\n    function showNewestMessage(){\r\n        chat.lastElementChild.scrollIntoView();\r\n    }\r\n\r\n    // automated reply on first message\r\n    if (chat.childElementCount == 2) {\r\n        let typing = doc.create('div');\r\n        let loadingFx1 = doc.create('span');\r\n        let loadingFx2 = doc.create('span');\r\n        let loadingFx3 = doc.create('span');\r\n        showNewestMessage();\r\n        setTimeout(function(){\r\n            typing.appendChild(loadingFx1);\r\n            typing.appendChild(loadingFx2);\r\n            typing.appendChild(loadingFx3);\r\n            typing.classList.add('typing');\r\n            chat.appendChild(typing);\r\n            showNewestMessage();\r\n            setTimeout(function(){\r\n                typing.style.display=\"none\";\r\n                let chatBubble2 = doc.create('div');\r\n                chatBubble2.innerText = \"Hey there, please leave your details so we can contact you even if you are no longer on the site.\";\r\n                chatBubble2.classList.add('chat-you');\r\n                chat.appendChild(chatBubble2);\r\n\r\n                let chatBubble3 = doc.create('div');\r\n                chatBubble3.appendChild(firstResponse);\r\n                chatBubble3.classList.add('chat-you');\r\n                chat.appendChild(chatBubble3);\r\n                showNewestMessage();\r\n            },4000);\r\n        },500);\r\n    }\r\n\r\n    // if this is not the first message, reply with random shit\r\n    else {\r\n        let typing = doc.create('div');\r\n        let loadingFx1 = doc.create('span');\r\n        let loadingFx2 = doc.create('span');\r\n        let loadingFx3 = doc.create('span');\r\n        showNewestMessage();\r\n        setTimeout(function(){\r\n            typing.appendChild(loadingFx1);\r\n            typing.appendChild(loadingFx2);\r\n            typing.appendChild(loadingFx3);\r\n            typing.classList.add('typing');\r\n            chat.appendChild(typing);\r\n            showNewestMessage();\r\n            setTimeout(function(){\r\n                typing.style.display=\"none\";\r\n                let chatBubble2 = doc.create('div');\r\n                chatBubble2.innerHTML = \"That's very interesting, but I don't have time for that ;)\";\r\n                chatBubble2.classList.add('chat-you');\r\n                chat.appendChild(chatBubble2);\r\n                showNewestMessage();\r\n            },4000);\r\n        },500);\r\n    }\r\n}\r\n\r\n// create chat bubbles\r\ndoc.get('.enter').addEventListener('click', sendMessage);\r\n\r\n// chat clip/enter button transform on input\r\ndoc.get('.chat-input').addEventListener('keypress', function(e){\r\n    setTimeout(function(){\r\n        if (e.target.value != \"\") {\r\n            doc.get('.clip').classList.add('transparent');\r\n            doc.get('.enter').classList.remove('transparent');  \r\n        }\r\n        else {\r\n            doc.get('.clip').classList.remove('transparent');\r\n            doc.get('.enter').classList.add('transparent');\r\n        };\r\n    },1)\r\n    \r\n    // send message on enter\r\n    if(e.code == \"Enter\") {\r\n        sendMessage();\r\n    }\r\n});\r\n\r\n// update enter/attatchement icons on mouseclick\r\nif (doc.get('.chat-wrap').classList.contains('chat-open')){\r\n    doc.get('body').addEventListener('click', function() {\r\n        if (doc.get('.chat-input').value != \"\") {\r\n            doc.get('.clip').classList.add('transparent');\r\n            doc.get('.enter').classList.remove('transparent');        \r\n        }\r\n        else {\r\n            doc.get('.clip').classList.remove('transparent');\r\n            doc.get('.enter').classList.add('transparent');\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n// Empty section parallax\r\nif(window.innerWidth > 767) {\r\n    window.addEventListener('scroll', function parallax(){\r\n        if (pageYOffset > 1100) {\r\n            let startingPoint = 1100;\r\n            let position = 0-1790 + (pageYOffset - startingPoint)*0.8;\r\n            doc.get('section.empty').style.backgroundPosition=\"center \"+position+\"px\";\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}